// libraryTags.cdog

libraries = {
    gmp={
        useStatus='static'
        description='Gnu library to provide arithmetic for arbitrarily large integers, floats and fractions.'
        features=[BigNumbers, BigFractions]
        libFiles=[gmp, gmpxx]
        headers=[gmp.h, gmpxx.h]
    }

    sdl2={
        useStatus='static'
        description='Simple DirectMedia Layer is a wrapper around basic machine functionality'
        features=[GraphicsModes, MouseX, KeyboardX, AudioX]
        platforms=[Linux, OS-X_Devices, Windows, iOS_Devices, Android]
        bindings =[C, CPP, perl, python]
        CPUs     =[i386, amd64, arm7]
        libFiles=[SDL2, SDL2_image]
        headers=[SDL2/SDL.h, SDL2/SDL_image.h]
        initCode="SDL_Init(SDL_INIT_VIDEO+SDL_INIT_AUDIO+SDL_INIT_TIMER)"
        deinitCode="SDL_Quit()"
    }

    GTK3={
        useStatus= dynamic
        description='GTK is a GUI Toolkit'
        features=[GUI_ToolKit, Mouse, Keyboard, Audio]
        platforms=[Linux, OS-X_Devices, Windows]
        bindings =[C, CPP, perl, python]
        CPUs     =[i386, amd64, arm7]
        libFiles=[`pkg-config --cflags --libs gtk+-3.0`]
        headers=[gtk/gtk.h]
    }

    cairo={
        useStatus='static'
        description='Drawing 2D'
        features=[Drawing2D]
        libFiles=[cairo]
        headers=[cairo.h]
    }

    Java={
        useStatus= dynamic
        description='Misc Java'
        features=[System]
        platforms=[Java, Android]
        bindings =[Java]
        CPUs     =[JavaVM]
        libFiles=[]
        headers=[java.lang.String, java.io.*, java.util.logging.Level, java.util.logging.Logger, java.util.Random, java.util.Date, java.util.Map, java.util.TreeMap, java.util.ArrayList, java.util.Arrays, java.util.concurrent.*]
    }

    CPP={
        useStatus= dynamic
        description='Misc CPP'
        features=[System]
        platforms=[Linux, OS-X_Devices, Windows]
        bindings =[C, CPP, perl, python]
        CPUs     =[i386, amd64, arm7]
        libFiles=[]
        headers=[signal.h, string, cstring, memory, cstdint, deque, map, cstdarg, iostream, fstream, sys/stat.h]
    }

    Swing={
        useStatus= dynamic
        description='Swing is a GUI widget toolkit for Java '
        features=[GUI_ToolKit]
        platforms=[Java]
        bindings =[Java]
        CPUs     =[JavaVM]
        libFiles=[]
        headers=[java.awt.*, java.awt.event.*, java.awt.geom.*, javax.swing.*, java.awt.Font, java.awt.image.BufferedImage, java.awt.Graphics, java.awt.Graphics2D, javax.imageio.ImageIO, java.nio.file.Paths, java.awt.event.MouseAdapter, javax.swing.event.MouseInputAdapter]
    }

    AndroidGUI={
        useStatus= dynamic
        description='Misc for Android '
        features=[GUI_ToolKit]
        platforms=[Android]
        bindings =[Java]
        CPUs     =[ARM]
        libFiles=[]
        headers=[android.view.View, android.widget.LinearLayout, android.graphics.Canvas, android.graphics.Color, android.graphics.Paint, android.view.Menu, android.graphics.Path, android.widget.ScrollView, android.widget.HorizontalScrollView, android.view.SubMenu, android.widget.TextView, android.graphics.Typeface, android.graphics.Bitmap, android.graphics.BitmapFactory, android.content.res.AssetManager, android.view.MotionEvent ]
    }

    Android={
        useStatus= dynamic
        description='GUI widget toolkit for Android '
        features=[System]
        platforms=[Android]
        bindings =[Java]
        CPUs     =[ARM]
        libFiles=[]
        headers=[android.app.Activity, android.os.Bundle, android.content.Context, android.util.Log]
    }

    Swift={
        useStatus= dynamic
        description='Misc for Swift '
        features=[System]
        platforms=[XCODE]
        bindings =[Swift]
        CPUs     =[Apple]
        libFiles=[]
        headers=[Foundation]
    }
}
