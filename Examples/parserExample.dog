// parserExample.dog

LinuxBuild: Platform='Linux' CPU='amd64' Lang='CPP' optimize='speed';
//SwingBuild: Platform='Java' CPU='JavaVM' Lang='Java' optimize='speed';
//AndroidBuild: Platform='Android' CPU='JavaVM' Lang='Java' optimize='power';
//iPhoneBuild: Platform='IOS' CPU='amd64' Lang='Swift' optimize='speed';

Title = "Parser Example"
FileName = "parserExample"
Version = "1.0"
CopyrightMesg = "Public Domain"
Authors = "Bruce Long"
Description = "Example of parser"
ProgramOrLibrary = "program"

featuresNeeded = [Logger, BigNumbers]

LicenseText = `Public Domain`


runCode=`runProg()`
struct EmpName{
    me string: firstName
    me string: lastName
    me string: middleName
}
struct Employee{
    me EmpName: empName
    me int: age
    me mode[Mr, Ms, Dr]:title
    me int: streetNumber
    me mode[N, S, E, W]: streetPrefix
    me string: streetName
    me mode[St, Pl, Ct, Ave]: streetSuffix
    me string: city
    me int: zipCode
}
struct Company{
    me string: companyName
    me Employee[list]: employees
}
string Address{
    >int: streetNumber
    >ws>[("N"<=> streetPrefix=N;)
	|("S"<=> streetPrefix=S;)
	|("E"<=> streetPrefix=E;)
	|("W"<=> streetPrefix=W;)
        ][opt]
    >ws>string: streetName
    >ws>string: city
    >ws>int: zipCode
}
string EmpName{
    >ws>string: firstName
    >ws>string: lastName
    >ws>string[opt]: middleName
}
string Employee{
    >ws>EmpName: empName
    >ws>[("Mr"<=> title=Mr;)
	|("Ms"<=> title=Ms;)
	|("Dr"<=> title=Dr;)
        ][opt]
    >ws>me Address
}
string Company: StartSymbol="true" {
    >{>string: companyName > ws
	>Employee[list]: employees
    }
}

struct GLOBAL{
    void: runProg()<-{
	our Company: result <- Parse_Company("'The Slipstream' 'Bob' 'Roberts' 123 W 'Oak' 'BayCity' 12345")
        print("Parse Complete\n")
	print("    CompanyName:",result.companyName,"\n")
	print("    Employee:",result.employees[0].empName.firstName," ",result.employees[0].empName.lastName,"\n")
	print("    Address:",result.employees[0].streetNumber," ",result.employees[0].streetName,"\n")
    }
}

