// CodeDog Threads Library

requirements = [
   [tagOneOf, Lang, [Java]]
]

interface={
    provides=[threads_implementation]
    libFiles=[pthread]
    headers =[android.os.HandlerThread, java.lang.Thread.*]
}

LibDescription  = {
    useStatus   = dynamic
    description = 'Library for Webmulti-thread programming'
    features    = [Threads]
    Lang        = [Java]
}

struct Threads{their Thread: Threads}
struct Threads{
    me bool: notDone <- true
    me uint: ID()           <- {return(5);}     // TODO: Finish Thread::ID(), Thread::isActive() and make active threads automatically join() in destructor.
    void: run()             <- {}
    bool: isActive()        <- <%!isAlive();%>
    void: start()           <- <%!start();%>
    void: waitForExit()     <- <%!join(0);%>



}
